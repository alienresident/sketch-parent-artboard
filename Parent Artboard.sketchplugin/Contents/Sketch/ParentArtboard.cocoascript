@import 'common.js'


var onRun = function(context) {
  // log('This is Mark\x27s ParentArtboard script.');

  var doc = context.document,
    initialPage = [doc currentPage],
    artboards = [initialPage artboards]

    number_artboards = [artboards count]
    // log('Number of Artboards is ' + number_artboards)
   
    var widths = []; 
    var heights = [];
    var xPositions = [];
    var yPositions = [];
      
    for (var i = 0; i < number_artboards; i++) {
      var a = artboards[i];
      widths[i] = [[a frame] width];
      heights[i] = [[a frame] height];
      xPositions[i] = [[a absoluteRect] minX];
      yPositions[i] = [[a absoluteRect] minY];
    }
    // log('Widths:' + widths);
    // log('Heights:' + heights);
    // log('X Positions:' + xPositions);
    // log('Y Postions:' + yPositions);

    // Dedupe the widths of the Artboards
    var sameWidth = widths.reduce(function(a,b){
      if (a.indexOf(b) < 0 ) a.push(b);
      return a;
    },[]);

    if(sameWidth.length > 1) {
      alert("Mixed width artboards!", "Your artboards don\x27t have the same width!");
    }

    // Add all the Artboards heights together
    var sumHeights = heights.reduce(add, 0);
    // log('Total Heights: ' + sumHeights);

    // Declare single X Position as a number
    var singleXPos = 0;

   // Check to see if the X positions are aligned
    var alignedX = xPositions.reduce(function(a,b){
      if (a.indexOf(b) < 0 ) a.push(b);
      return a;
    },[]);

    // Alert if the X positions are not aligned
    if(alignedX.length > 1) {
      alert("Artboards Misaligned!", "Your artboards don\x27t have the same X position!");
    } else {
      singleXPos = alignedX;
    }
    //log('singleXPos: ' + singleXPos );

    // find the highest Y position
    var minYPos = Math.min.apply(null, yPositions);
    var singleYPos = minYPos;

    createNewArtboardFromArtboards(sameWidth, sumHeights, singleXPos, singleYPos);

  function createNewArtboardFromArtboards(width, height, xPos, yPos) {

    newArtboardWidth = width;
    newArtboardHeight = height;
    newArtboardX = xPos;
    newArtboardY = yPos;

    newArtboard = [MSArtboardGroup new]
    [newArtboard setName:"Artboard to Export"]
    newArtboardFrame = [newArtboard frame]
    [newArtboardFrame setWidth:newArtboardWidth]
    [newArtboardFrame setHeight:newArtboardHeight]
    [newArtboardFrame setX:newArtboardX]
    [newArtboardFrame setY:newArtboardY]

    // Make New Artboard Exportable and set PNG Format
    var format = "png";
    makeExportable(newArtboard, format);

    page = [doc currentPage]
    [page addLayers:[NSArray arrayWithObjects:newArtboard]]

    // Select new layer
    newArtboard.select_byExpandingSelection(true, false);
    [NSApp sendAction:'moveToBack:' to:nil from:doc]
    
    return newArtboard
  }
};